<?php
use UserAgentParserComparison\Provider;
use GuzzleHttp\Client;
use GuzzleHttp\HandlerStack;
use GuzzleHttp\Handler\CurlHandler;

/*
 * Browscap
 */
$browscapAdapter = new \League\Flysystem\Local\LocalFilesystemAdapter('data/cache/.tmp/browscap/standard');
$browscapCache   = new \MatthiasMullie\Scrapbook\Psr16\SimpleCache(
    new \MatthiasMullie\Scrapbook\Adapters\Flysystem(
        new \League\Flysystem\Filesystem($browscapAdapter)
    )
);

$logger = new \Psr\Log\NullLogger();

$browscapProviderStandard = new Provider\BrowscapPhp(
    new \BrowscapPHP\Browscap($browscapCache, $logger)
);

/*
 * BrowscapLite
 */
$browscapLiteAdapter = new \League\Flysystem\Local\LocalFilesystemAdapter('data/cache/.tmp/browscap/lite');
$browscapLiteCache   = new \MatthiasMullie\Scrapbook\Psr16\SimpleCache(
    new \MatthiasMullie\Scrapbook\Adapters\Flysystem(
        new \League\Flysystem\Filesystem($browscapLiteAdapter)
    )
);

$browscapProviderLite = new Provider\BrowscapLite(
    new \BrowscapPHP\Browscap($browscapLiteCache, $logger)
);

/*
 * BrowscapFull
 */
$browscapFullAdapter = new \League\Flysystem\Local\LocalFilesystemAdapter('data/cache/.tmp/browscap/full');
$browscapFullCache   = new \MatthiasMullie\Scrapbook\Psr16\SimpleCache(
    new \MatthiasMullie\Scrapbook\Adapters\Flysystem(
        new \League\Flysystem\Filesystem($browscapFullAdapter)
    )
);

$browscapProviderFull = new Provider\BrowscapFull(
    new \BrowscapPHP\Browscap($browscapFullCache, $logger)
);

/*
 * Matomo
 */
$matamoAdapter = new \League\Flysystem\Local\LocalFilesystemAdapter('data/cache/.tmp/matomo');
$matamoCache   = new \MatthiasMullie\Scrapbook\Psr16\SimpleCache(
    new \MatthiasMullie\Scrapbook\Adapters\Flysystem(
        new \League\Flysystem\Filesystem($matamoAdapter)
    )
);

$matomoParser = new \DeviceDetector\DeviceDetector();
$matomoParser->setCache(new \DeviceDetector\Cache\PSR16Bridge($matamoCache));

$matomoProvider = new Provider\MatomoDeviceDetector($matomoParser);

/*
 * BrowserDetector
 */
$detectorAdapter = new \League\Flysystem\Local\LocalFilesystemAdapter('data/cache/.tmp/browser-detector');
$detectorCache   = new \MatthiasMullie\Scrapbook\Psr16\SimpleCache(
    new \MatthiasMullie\Scrapbook\Adapters\Flysystem(
        new \League\Flysystem\Filesystem($detectorAdapter)
    )
);

$browserDetectorFactory  = new \BrowserDetector\DetectorFactory($detectorCache, $logger);
$browserDetectorProvider = new Provider\BrowserDetector(
    $browserDetectorFactory()
);

/*
 * HTTP
 */
//$handler = new CurlHandler();
//$stack = HandlerStack::create($handler);
//
//$client = new Client([
//    'handler' => $stack,
//    'timeout' => 3,
//
//    'curl' => [
//        CURLOPT_SSL_VERIFYHOST => false,
//        CURLOPT_SSL_VERIFYPEER => false
//    ]
//]);
//
//$userAgentString = new Provider\Http\UserAgentStringCom($client);


return new Provider\Chain([
    $browscapProviderStandard,
    $browscapProviderLite,
    $browscapProviderFull,
    $matomoProvider,
    $browserDetectorProvider,
    new Provider\DonatjUAParser(),
    new Provider\SinergiBrowserDetector(),
    new Provider\UAParser(),
    new Provider\WhichBrowser(),
    new Provider\Woothee(),

//     $userAgentString,
]);
